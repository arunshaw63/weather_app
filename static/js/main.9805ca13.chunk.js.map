{"version":3,"sources":["components/Weather.js","components/Form.js","App.js","index.js"],"names":["minmaxTemp","min","max","className","Weather","props","city","weatherIcon","temp_celsius","temp_min","temp_max","description","Form","error","role","onSubmit","loadweather","type","name","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","sys","celsius","calCelsius","main","temp","weather","get_weatherIcon","id","state","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeid","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAqBA,SAASA,EAAWC,EAAIC,GACrB,GAAGD,GAAKC,EAAM,OACb,+BACI,uBAAMC,UAAU,OAAhB,UAAwBF,EAAxB,UACA,uBAAME,UAAU,OAAhB,UAAwBD,EAAxB,aAIOE,MA3Bf,SAAiBC,GACb,OACI,qBAAKF,UAAU,YAAf,SACI,sBAAKA,UAAU,yBAAf,UACR,6BAAKE,EAAMC,OAEX,oBAAIH,UAAU,OAAd,SAAqB,mBAAGA,UAAS,aAAQE,EAAME,YAAd,kBAEhCF,EAAMG,aAAc,qBAAIL,UAAU,OAAd,UAAsBE,EAAMG,aAA5B,UAAqD,KAEzER,EAAWK,EAAMI,SAASJ,EAAMK,UAEjC,oBAAIP,UAAU,OAAd,SAAsBE,EAAMM,oB,kBCkBjBC,MA9Bf,SAAcP,GACV,OACI,sBAAKF,UAAU,YAAf,UACI,8BAAME,EAAMQ,MAsBhB,qBAAKV,UAAU,0BAA0BW,KAAK,QAA9C,2CAtB8B,OAC1B,sBAAMC,SAAUV,EAAMW,YAAtB,SACA,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,uBAAOc,KAAK,OAAOd,UAAU,eAAee,KAAK,OAAOC,YAAY,WAGxE,qBAAKhB,UAAU,WAAf,SACA,uBAAOc,KAAK,OAAOd,UAAU,eAAee,KAAK,UAAUC,YAAY,cAGvE,qBAAKhB,UAAU,gCAAf,SACI,wBAAQA,UAAU,kBAAlB,oCCiGLiB,E,kDAvGX,WAAYf,GAAO,IAAD,8BAChB,gBAwDFgB,WAzDkB,uCAyDP,WAAMC,GAAN,qBAAAC,EAAA,yDACTD,EAAEE,iBACIlB,EAAKgB,EAAEG,OAAOC,SAASpB,KAAKqB,MAC5BC,EAAQN,EAAEG,OAAOC,SAASE,QAAQD,OAErCrB,IAAQsB,EALF,iCAOcC,MAAM,qDAAD,OAAsDvB,EAAtD,YAA8DsB,EAA9D,kBAnEpB,qCA4DC,cAODE,EAPC,gBAScA,EAASC,OATvB,OASDC,EATC,OAUPC,QAAQC,IAAIF,GAEZ,EAAKG,SAAS,CACZ7B,KAAK,GAAD,OAAI0B,EAASd,KAAb,YAAqBc,EAASI,IAAIR,SACtCS,QAAQ,EAAKC,WAAWN,EAASO,KAAKC,MACtC9B,SAAS,EAAK4B,WAAWN,EAASO,KAAK7B,UACvCD,SAAS,EAAK6B,WAAWN,EAASO,KAAK9B,UACvCE,YAAYqB,EAASS,QAAQ,GAAG9B,cAGlC,EAAK+B,gBAAgB,EAAKnC,YAAYyB,EAASS,QAAQ,GAAGE,IApBnD,wBAuBX,EAAKR,SAAS,CAACtB,OAAM,IAvBV,4CAzDO,sDAEhB,EAAK+B,MAAM,CACHtC,KAAK,GACLsB,QAAQ,GACRiB,KAAK,GACLN,KAAK,GACLF,QAAQ,GACR3B,SAAS,GACTD,SAAS,GACTE,YAAY,GACZE,OAAM,GAEd,EAAKN,YAAY,CACfuC,aAAa,kBACbC,QAAQ,WACRC,KAAK,mBACLC,KAAK,UACLC,WAAW,SACXC,MAAM,eACNC,OAAO,cApBO,E,uDA0BPZ,GAET,OADSa,KAAKC,MAAMd,EAAK,U,sCAIXe,EAAMC,GACbA,GAAS,KAAOA,GAAS,IAC1BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAYuC,eAE/BU,GAAS,KAAOA,GAAS,IAC/BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAYwC,UAE/BS,GAAS,KAAOA,GAAS,IAC/BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAYyC,OAE/BQ,GAAS,KAAOA,GAAS,IAC/BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAY0C,OAE/BO,GAAS,KAAOA,GAAS,IAC/BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAY2C,aAErB,MAAVM,EACNC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAY4C,QAC9BK,GAAS,KAAOA,GAAS,IAChCC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAY6C,SAE/BI,GAAS,KAAOA,GAAS,KAC/BC,KAAKtB,SAAS,CAACU,KAAKY,KAAKlD,YAAYwC,Y,+BAiC/C,OACE,sBAAK5C,UAAU,MAAf,UACE,cAAC,EAAD,CAAMU,MAAO4C,KAAKb,MAAM/B,MAAOG,YAAayC,KAAKpC,aACjD,cAAC,EAAD,CACAf,KAAMmD,KAAKb,MAAMtC,KACjBsB,QAAS6B,KAAKb,MAAMhB,QACpBpB,aAAciD,KAAKb,MAAMP,QACzB3B,SAAU+C,KAAKb,MAAMlC,SACrBD,SAAUgD,KAAKb,MAAMnC,SACrBE,YAAa8C,KAAKb,MAAMjC,YACxBJ,YAAakD,KAAKb,MAAMC,c,GAjGZa,IAAMC,WCJxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9805ca13.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Weather(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\" cards text-light pt-4\">\r\n    <h1>{props.city}</h1>\r\n\r\n    <h5 className=\"py-4\"><i className={`wi ${props.weatherIcon} display-1`}></i></h5>\r\n\r\n    {props.temp_celsius?(<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>):null}\r\n  \r\n    {minmaxTemp(props.temp_min,props.temp_max)}  \r\n    \r\n    <h4 className=\"py-3\">{props.description}</h4>\r\n\r\n            </div>             \r\n        </div>\r\n    )\r\n};\r\n\r\nfunction minmaxTemp(min,max){\r\n   if(min&&max) {return(\r\n    <h3>\r\n        <span className=\"px-4\">{min}&deg;</span>\r\n        <span className=\"px-4\">{max}&deg;</span>\r\n        </h3>\r\n    );}\r\n}\r\nexport default Weather\r\n","import React from 'react'\r\nimport './Form.css';\r\nfunction Form(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>{props.error?error():null}</div>\r\n            <form onSubmit={props.loadweather}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 offset-md-2\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"city\" placeholder=\"city\"/>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                <input type=\"text\" className=\"form-control\" name=\"country\" placeholder=\"country\"/>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 mt-md-0 text-md-left\">\r\n                    <button className=\"btn btn-warning\">Get Weather</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\nfunction error(){\r\n    return(\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter City and Country\r\n        </div>\r\n    )\r\n}\r\nexport default Form;\r\n","\n\nimport React from 'react';\nimport './App.css'\nimport Weather from './components/Weather';\nimport 'weather-icons/css/weather-icons.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Form from './components/Form';\nconst API_key=\"9f76db426264657fbac6ec0c83e02194\";\n\nclass App extends React.Component{\n    constructor(props){\n      super();\n      this.state={\n              city:\"\",\n              country:\"\",\n              icon:\"\",\n              main:\"\",\n              celsius:\"\",\n              temp_max:\"\",\n              temp_min:\"\",\n              description:\"\",\n              error:false\n      }\n      this.weatherIcon={\n        Thunderstorm:\"wi-thunderstorm\",\n        Drizzle:\"wi-sleet\",\n        Rain:\"wi-storm-showers\",\n        Snow:\"wi-snow\",\n        Atmosphere:\"wi-fog\",\n        Clear:\"wi-day-sunny\",\n        Clouds:\"wi-day-fog\"\n      }\n    }\n    // constructor ended here\n\n    \n    calCelsius(temp){\n      let cell=Math.floor(temp-273.15)\n      return cell\n    }\n\n    get_weatherIcon(icons,rangeid){\n          if(rangeid>=200 && rangeid<=232){\n            this.setState({icon:this.weatherIcon.Thunderstorm})\n          }\n          else if(rangeid>=300 && rangeid<=321){\n            this.setState({icon:this.weatherIcon.Drizzle})\n          }\n          else if(rangeid>=500 && rangeid<=531){\n            this.setState({icon:this.weatherIcon.Rain})\n          }\n          else if(rangeid>=600 && rangeid<=622){\n            this.setState({icon:this.weatherIcon.Snow})\n          }\n          else if(rangeid>=700 && rangeid<=781){\n            this.setState({icon:this.weatherIcon.Atmosphere})\n          }\n          else if(rangeid===800){\n            this.setState({icon:this.weatherIcon.Clear})\n          }else if(rangeid>=801 && rangeid<=804){\n            this.setState({icon:this.weatherIcon.Clouds})\n          }\n          else if(rangeid>=300 && rangeid<=321){\n            this.setState({icon:this.weatherIcon.Drizzle})\n          }\n        }\n\n    getWeather=async(e)=>{\n      e.preventDefault();\n      const city=e.target.elements.city.value;\n      const country=e.target.elements.country.value;\n\n      if(city && country){\n\n        const api_call=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n\n        const response=await api_call.json();\n        console.log(response);\n      \n        this.setState({\n          city:`${response.name},${response.sys.country}`,\n          celsius:this.calCelsius(response.main.temp),\n          temp_max:this.calCelsius(response.main.temp_max),\n          temp_min:this.calCelsius(response.main.temp_min),\n          description:response.weather[0].description,\n            \n        })\n        this.get_weatherIcon(this.weatherIcon,response.weather[0].id)\n      }\n      else{\n    this.setState({error:true})\n      }\n\n    }\n\n  render(){\n  return (\n    <div className=\"App\">\n      <Form error={this.state.error} loadweather={this.getWeather}/>\n      <Weather \n      city={this.state.city} \n      country={this.state.country}\n      temp_celsius={this.state.celsius}\n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      weatherIcon={this.state.icon}\n      />\n      \n    </div>\n  )}\n}\n\nexport default App\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}